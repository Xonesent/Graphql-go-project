version: '3.9'

services:
  app:
    build: .
    container_name: app
    ports:
      - "${FIBER_PORT}:${FIBER_PORT}"
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    networks:
      - testing

  postgres:
    image: postgres:latest
    container_name: ${POSTGRES_HOST}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s
    restart: always
    networks:
      - testing
  mongodb:
    image: mongo:latest
    container_name: ${MONGO_HOST}
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    healthcheck:
      test: [ "CMD","mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s
    restart: always
    networks:
      - testing

networks:
  testing:
    driver: bridge